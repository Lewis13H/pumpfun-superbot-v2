#!/bin/bash

echo "ðŸ“Š Shyft gRPC Rate Limits Information"
echo "===================================="
echo ""
echo "Connection Limits:"
echo "  â€¢ Max concurrent connections: 2-5 per token (varies by plan)"
echo "  â€¢ Connection timeout: 5-10 minutes of inactivity"
echo ""
echo "Subscription Limits:"
echo "  â€¢ Max subscriptions: 100 per 60 seconds"
echo "  â€¢ Each monitor creates 1 subscription on start"
echo "  â€¢ Each reconnect creates 1 new subscription"
echo ""
echo "Current Setup (4 monitors):"
echo "  â€¢ Initial subscriptions: 4"
echo "  â€¢ If all disconnect and reconnect: 8 subscriptions"
echo "  â€¢ With rapid reconnects: Can quickly hit 100 limit"
echo ""
echo "Mitigation Strategies Implemented:"
echo "  âœ… Staggered monitor startup (2s between each)"
echo "  âœ… Rate limiting between subscription attempts (1s minimum)"
echo "  âœ… 60-second backoff on rate limit errors"
echo "  âœ… Proper stream cleanup on shutdown"
echo ""
echo "Recommendations:"
echo "  1. For development: Run 2 monitors at a time"
echo "     npm run bc-monitor & npm run bc-account-monitor"
echo "  "
echo "  2. For production: Use the wrapped monitors with rate limiting"
echo "     npm run start"
echo "  "
echo "  3. If you hit limits frequently:"
echo "     - Contact Shyft for higher limits"
echo "     - Use multiple tokens with different monitor sets"
echo "     - Implement connection pooling (share 1 connection)"
echo ""
echo "Current Time: $(date)"
echo "Wait until: $(date -v+1M) before retrying if rate limited"